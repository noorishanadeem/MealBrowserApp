@page "/browse-by-country"
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h3 style="text-align: center;">Browse Meals by Country</h3>

@if (Countries != null && Countries.Count > 0)
{
    <div style="display: flex; flex-wrap: wrap; justify-content: center; gap: 15px; padding: 20px;">
        @foreach (var country in Countries)
        {
            <button class="btn btn-outline-success" style="min-width: 150px;" @onclick="() => FetchMealsByCountry(country.StrArea)">
                @country.StrArea
            </button>
        }
    </div>
}

@if (Meals != null && Meals.Count > 0)
{
    <div style="display: grid; grid-template-columns: repeat(auto-fill, minmax(200px, 1fr)); gap: 20px; padding: 20px;">
        @foreach (var meal in Meals)
        {
            <div @onclick="() => NavigateToMeal(meal.IdMeal)"
                 style="cursor: pointer; text-align: center; border: 1px solid #ddd; padding: 10px; border-radius: 10px; box-shadow: 0 4px 8px rgba(0,0,0,0.1);">
                <img src="@meal.StrMealThumb" alt="@meal.StrMeal" style="width: 100%; height: auto; border-radius: 8px;" />
                <p style="font-weight: bold; margin-top: 10px;">@meal.StrMeal</p>
            </div>
        }
    </div>
}

@code {
    private List<Country> Countries { get; set; } = new();
    private List<Meal> Meals { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var response = await HttpClient.GetFromJsonAsync<CountryResponse>("https://www.themealdb.com/api/json/v1/1/list.php?a=list");
        if (response?.Meals != null)
        {
            Countries = response.Meals;
        }
    }

    private async Task FetchMealsByCountry(string country)
    {
        var response = await HttpClient.GetFromJsonAsync<MealResponse>($"https://www.themealdb.com/api/json/v1/1/filter.php?a={country}");
        Meals = response?.Meals ?? new List<Meal>();
    }

    private void NavigateToMeal(string mealId)
    {
        NavigationManager.NavigateTo($"/meal/{mealId}");
    }

    public class CountryResponse
    {
        public List<Country>? Meals { get; set; }
    }

    public class Country
    {
        public string StrArea { get; set; } = string.Empty;
    }

    public class MealResponse
    {
        public List<Meal>? Meals { get; set; }
    }

    public class Meal
    {
        public string IdMeal { get; set; } = string.Empty;
        public string StrMeal { get; set; } = string.Empty;
        public string StrMealThumb { get; set; } = string.Empty;
    }
}
